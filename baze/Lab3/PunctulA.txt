ALTER Procedure punctulA (

	@numeFilm varchar(20),
	@gen varchar(20),
	@numeClient varchar(20),
	@telefon varchar(20)

)

As
	Begin
		Begin Try
			Begin Transaction
				
				Declare @logger varchar(20);
				Set @logger = '[Logger]: ';

				print @logger + 'Sistemul a inceput tranzactia pentru filmul ' + @numeFilm + ' si clientul ' + @numeClient;

				Declare @idMagazin int;
				Declare @idFilm int;
				Declare @idClient int;
				Declare @idAchizite int;

				Declare @error varchar(100);

				Set @idMagazin = 1;

				Select @idFilm = (Max(idFilm) + 1) from Film;
				Select @idClient = (Max(idClient) + 1) from Client;
				Select @idAchizite = (Max(idAchizitie) + 1) from Achizitie;

				Set @error = 'Campuri invalide: ';

				Save Transaction savePoint;

				if(@numeFilm = '')
					Set @error = @error + 'Nume film null, ';
				if(@gen = '')
					Set @error = @error + 'Gen null, ';
				if(@numeClient = '')
					Set @error = @error + 'Nume client null, ';
				if(@telefon = '')
					Set @error = @error + 'Numar telefon null, ';
				
				if(@error != 'Campuri invalide: ')
					Begin
						print @logger + @error;
						print @logger + 'Tranzactia n-a putut fi efectuata';
						Throw 5100, @error, 1
					End
				else
					Begin
						
						Insert Film(idFilm, idMagazin, nume, gen) Values(@idFilm, 1, @numeFilm, @gen);
						Insert Client(idClient, nume, telefon) Values(@idClient, @numeClient, @telefon);
						Insert Achizitie(idAchizitie, idFilm, idCLient) Values(@idAchizite, @idFilm, @idClient);

						Commit Transaction

						print @logger + 'Tranzactia a fost efectuata';

					End
		End Try
		Begin Catch
			
			Rollback Transaction savePoint;
			Commit Transaction

		End Catch
	End